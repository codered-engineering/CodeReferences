class BankAccount {

	private double balance = 0.0;
	private double lineOfCredit;
	private String accountNumber;
	private AccountState state;
	
	public BankAccount(String accountNumber, double lineOfCredit) {
		if(accountNumber.equals("")) {
			throw new IllegalArgumentException();
		}
		if(lineOfCredit == 0) {
			throw new IllegalArgumentException();
		}
		state = new Positive();
		this.accountNumber = accountNumber;
		this.lineOfCredit = lineOfCredit;
	}
	
	

	public boolean payIn(double amount) {
		if(amount <= 0) {
			throw new IllegalArgumentException();
		}
		
		balance += amount;
		if(balance >= 0) {
			state = new Positive();
		}
		return true;
		
	}
	
	public boolean payOff(double amount) {
		if(amount <= 0) {
			throw new IllegalArgumentException();
		}
		
		if (balance + lineOfCredit < amount) {
			return false;
		}
		
		balance -= amount;
		if(balance < 0) {
			state = new Negative();
		}
		
		if(balance == lineOfCredit) {
			state = new Frozen();
		}
		return true;
	}
	
	public boolean close() {
		
		if (balance == 0) {
			state = new Closed();
			return true;
		}
		return false;	
	}
	
	public double getBalance() {
		return balance;
	}
	
	public String getState() {
		return state.toString();
	}
	
	public String getAccountNumber() {
		return accountNumber;
	}
	
	public void printBalance() {
		state.printBalance();
	}
	
	public void payInterest() {
		if(state.toString().equals("Positive")) {
			balance *= 1.01;
		}
		if(state.toString().equals("Negative")) {
			balance *= 1.03;
		}
		if(state.toString().equals("Frozen")) {
			balance *= 1.05;
		}
	}
	
	/**********************************************************************************/
	abstract class AccountState {

	public boolean payIn(double amount) {
		return false;
	}
	
	public boolean payOff(double amount) {
		return false;
	}
	
	public String toString() {
		return "";
		
	}
	
	public void payInterest() {
		
		
	}
	
	public abstract void printBalance();
	
}
	
	class Positive extends AccountState{

		@Override
		public String toString() {
			return "Positive";
		}
		
		@Override
		public void printBalance() {
			System.out.println("Balance is POSITIVE: +" + balance + ".");
			
		}
		
	}
	
	class Negative extends AccountState{
		
		@Override
		public String toString() {
			return "Negative";
		}
		
		@Override
		public void printBalance() {
			System.out.println("Balance is NEGATIVE: " + balance + ".");
			
		}

	}
	
	class Frozen extends AccountState{
		
		@Override
		public String toString() {
			return "Frozen";
		}
		
		@Override
		public void printBalance() {
			System.out.println("Balance is NEGATIVE: " + (int)balance + ".");
			
		}
	}
	
	class Closed extends AccountState{
		
		@Override
		public boolean payIn(double amount) {
			return false;
		}
		
		@Override
		public boolean payOff(double amount) {
			return false;
		}
		
		public void payInterest() {
			throw new IllegalStateException();
		}
		
		@Override
		public String toString() {
			return "Closed";
		}
		
		@Override
		public void printBalance() {
			System.out.println("This account is CLOSED. The balance is ");
		}
	}
	
}
